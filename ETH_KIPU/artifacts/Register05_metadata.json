{
	"compiler": {
		"version": "0.8.19+commit.7dd6d404"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "getInfo",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "myInfo",
						"type": "string"
					}
				],
				"name": "setInfo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Solange Gueiros",
			"kind": "dev",
			"methods": {
				"getInfo()": {
					"details": "retrieves the string of the state variable `storedInfo`",
					"returns": {
						"_0": "the stored string"
					}
				},
				"setInfo(string)": {
					"details": "require msg.sender is the owner, otherwise send an error message",
					"params": {
						"myInfo": "the new string to store logra que no se gaste gas al abortar la ejecucion revierte y manda el error"
					}
				}
			},
			"title": "Concepts: require owner",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getInfo()": {
					"notice": "Return the stored string"
				},
				"setInfo(string)": {
					"notice": "Store `myInfo` Require that the account sending the transaction is the contract owner. If not, exits returning an error message.  If require is valid, continue execution."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"ETH_KIPU/Register05.sol": "Register05"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"ETH_KIPU/Register05.sol": {
			"keccak256": "0x25d34f3257acce7bf3e3aa41a685379e86ab50d1506606ec17f1b6986d0b004a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6b3c0de0b6d74f42ae4401c3eca73e5ff1b37591eaaaf1ca15eee675c4842c1b",
				"dweb:/ipfs/QmbASdFpuWmTSJAU9SamuREvUwjDnon6RB6d1z3FCCEgZx"
			]
		}
	},
	"version": 1
}